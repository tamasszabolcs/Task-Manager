@page
@using TaskManager.Models;
@using TaskManager.Pages;
@model TaskManager.Pages.CardViewModel
@{
    ViewData["Title"] = "Home page";
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>



<div class="col text-end">
    <a class="btn btn-primary" asp-area="" asp-page="/Index">

        View as table
    </a>
</div>

<div class="container p-3">
    <div class="row pt-4">
        <div class="above_table">
            <div class="col-6">
                <h2 class="text-primary">
                    CURRENT TASKS
                </h2>
            </div>


            <form class="d-flex" method="get">
                <div class="search_clearSearch_buttons">
                    <input class="form-control form-control-lg me-sm-2" type="search" name="searchString" placeholder="Search" value="@Request.Query["searchString"]">

                    @if (!string.IsNullOrEmpty(Request.Query["searchString"]))
                    {
                        <a href="@Url.Action("Index")"><button type="button" class="btn btn-secondary">Clear Search</button></a>
                    }
                    <button class="btn btn-secondary my-2 my-sm-0" type="submit">Search</button>

                </div>
            </form>

            <div class="col-6">
                <a class="btn btn-primary" asp-area="" asp-page="/Tasks/AddTask">
                    <i class="bi bi-plus-circle"></i> &nbsp; Add New Task
                </a>
            </div>


        </div>

        <div class="container">
            <div class="row row-cols-1">

                <div class="d-flex">
                    <div class="card" style="width: 18rem;" id="category-filter-card">
                        <div class="card-header text-white">
                            <button class="btn btn-primary" id="filterBtn" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
                                Filter by Category
                            </button>
                            <style>
                                #filterBtn {
                                    color: #fff;
                                    background-color: midnightblue;
                                    border-color: midnightblue
                                }
                            </style>
                            @*  <h5 class="card-title">Filter by Category</h5>*@
                        </div>
                        <div class="collapse" id="collapseExample">
                            <div style="display: flex; flex-direction: column; padding: 10px;">
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" name="categoryFilter" id="category-0" value="0" checked>
                                    <label class="form-check-label" for="category-0">All</label>
                                </div>

                                @foreach (var category in Model.Categories)
                                {
                                    <div>
                                        <input class="form-check-input" type="checkbox" name="categoryFilter" id="category-@category.CategoryId" value="@category.CategoryId">
                                        <label class="form-check-label" for="category-@category.CategoryId">@category.Name</label>
                                    </div>
                                }
                            </div>
                        </div>

                    </div>
                </div>

                <div class="d-flex">
                    <div class="card" style="width: 18rem;" id="status-filter-card">
                        <div class="card-header text-white">
                            <button class="btn btn-primary" id="filterBtn" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
                                Filter by Status
                            </button>
                            <style>
                                #filterBtn {
                                    color: #fff;
                                    background-color: midnightblue;
                                    border-color: midnightblue
                                }
                            </style>
                            @*  <h5 class="card-title">Filter by Category</h5>*@
                        </div>
                        <div class="collapse" id="collapseExample">
                            <div style="display: flex; flex-direction: column; padding: 10px;">
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" name="statusFilter" id="status-0" value="0" checked>
                                    <label class="form-check-label" for="status-0">All</label>
                                </div>

                                @foreach (var category in Model.Statuses)
                                {
                                    <div>
                                        <input class="form-check-input" type="checkbox" name="statusFilter" id="status-@category.StatusId" value="@category.StatusId">
                                        <label class="form-check-label" for="status-@category.StatusId">@category.Name</label>
                                    </div>
                                }
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>




    </div>
</div>


<div class="container">
    <partial name="_Reminder" />
    <div class="card-group">
        @if (!string.IsNullOrEmpty(Request.Query["searchString"]))
        {
            @foreach (Task1 task in Model.Tasks.Where(t => t.Name.Contains(Request.Query["searchString"]) ||
           t.Description.Contains(Request.Query["searchString"])))
            {
                int hoursLeft = (int)(task.DueDate - DateTime.Now).TotalHours;
                if (hoursLeft < 24 && hoursLeft >= 0 && task.StatusId != 3)
                {
                    <div class="col-md-4">
                        <div class="card border-primary mb-3" style="background-color: #f8d7da; width: 18rem;" data-categoryid="@task.CategoryId" data-status="@task.StatusId">
                            <div class="card-header text-white">
                                <h5 class="card-title">@task.Name</h5>
                            </div>
                            <div class="card-body">

                                <h6 class="card-subtitle mb-2 text-muted">Due date: @task.DueDate.ToString("dd/MM/yyyy")</h6>
                                @{
                                    if (Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId) == null)
                                    {
                                        <p class="card-text">Status: Undefined</p>
                                    }
                                    else
                                    {
                                        <p class="card-text">Status: @Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId).Name</p>
                                    }
                                }

                                @{
                                    if (Model.Categories.FirstOrDefault(c => c.CategoryId == task.CategoryId) == null)
                                    {
                                        <p class="card-text">Category: Undefined</p>
                                    }
                                    else
                                    {
                                        <p class="card-text">Category: @Model.Categories.FirstOrDefault(c => c.CategoryId == task.CategoryId).Name</p>
                                    }
                                }
                                @if (@Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId)?.Name == "Finished")
                                {
                                    @*<p class="card-text">Finished</p>*@
                                    <span id="progress-value">Progress: 100%</span>
                                }
                                else if (@Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId)?.Name == "Unstarted")
                                {
                                    @*<p class="card-text">Unstarted</p>*@
                                    <span id="progress-value">Progress: 0%</span>
                                }
                                else
                                {
                                    //@*<p class="card-text">(@Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId)?.Name</p>*@
                                    <span id="progress-value">Progress: @task.Progress%</span>
                                }
                                <p class="card-text">Description: @task.Description</p>

                                <div class="w-75 btn-group" role="group">
                                    <a id="editBtn" asp-page="./Tasks/EditTask" asp-route-id="@task.Id">
                                        <i class="bi bi-pencil-square"></i>
                                        Edit
                                    </a>
                                    <style>
                                        #editBtn {
                                            color: black;
                                            text-decoration: none;
                                        }

                                            #editBtn:hover {
                                                color: red;
                                            }
                                    </style>
                                </div>



                                <div class="w-75 btn-group" role="group">
                                    <a id="deleteButton" asp-page="/Index" asp-route-id="@task.Id" asp-page-handler="Delete" onclick="return confirm('Are you sure that you want to delete this task?')">
                                        <i class="bi bi-trash"></i>
                                        Delete
                                    </a>

                                    <style>
                                        #deleteButton {
                                            color: black;
                                            text-decoration: none;
                                        }

                                        color: red; #deleteButton:hover {
                                        }
                                    </style>

                                </div>

                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="col-md-4">
                        <div class="card border-primary mb-3" style="width: 18rem;" data-categoryid="@task.CategoryId" data-statusid="@task.StatusId">
                            <div class="card-header text-white">
                                <h5 class="card-title">@task.Name</h5>
                            </div>
                            <div class="card-body">

                                <h6 class="card-subtitle mb-2 text-muted">Due date: @task.DueDate.ToString("dd/MM/yyyy")</h6>
                                @{
                                    if (Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId) == null)
                                    {
                                        <p class="card-text">Status: Undefined</p>
                                    }
                                    else
                                    {
                                        <p class="card-text">Status: @Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId).Name</p>
                                    }
                                }

                                @{
                                    if (Model.Categories.FirstOrDefault(c => c.CategoryId == task.CategoryId) == null)
                                    {
                                        <p class="card-text">Category: Undefined</p>
                                    }
                                    else
                                    {
                                        <p class="card-text">Category: @Model.Categories.FirstOrDefault(c => c.CategoryId == task.CategoryId).Name</p>
                                    }
                                }
                                @if (@Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId)?.Name == "Finished")
                                {
                                    @*<p class="card-text">Finished</p>*@
                                    <span id="progress-value">Progress: 100%</span>
                                }
                                else if (@Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId)?.Name == "Unstarted")
                                {
                                    @*<p class="card-text">Unstarted</p>*@
                                    <span id="progress-value">Progress: 0%</span>
                                }
                                else
                                {
                                    //<p class="card-text">@Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId)?.Name</p>
                                    <span id="progress-value">Progress: @task.Progress%</span>
                                }
                                <p class="card-text">Description: @task.Description</p>

                                <div class="w-75 btn-group" role="group">
                                    <a id="editBtn" asp-page="./Tasks/EditTask" asp-route-id="@task.Id">
                                        <i class="bi bi-pencil-square"></i>
                                        Edit
                                    </a>
                                    <style>
                                        #editBtn {
                                            color: black;
                                            text-decoration: none;
                                        }

                                            #editBtn:hover {
                                                color: red;
                                            }
                                    </style>
                                </div>



                                <div class="w-75 btn-group" role="group">
                                    <a id="deleteButton" asp-page="/Index" asp-route-id="@task.Id" asp-page-handler="Delete" onclick="return confirm('Are you sure that you want to delete this task?')">
                                        <i class="bi bi-trash"></i>
                                        Delete
                                    </a>

                                    <style>
                                        #deleteButton {
                                            color: black;
                                            text-decoration: none;
                                        }

                                        color: red; #deleteButton:hover {
                                        }
                                    </style>

                                </div>

                            </div>
                        </div>
                    </div>
                }
            }
        }
        else
        {
            @foreach (Task1 task in Model.Tasks)
            {
                int hoursLeft = (int)(task.DueDate - DateTime.Now).TotalHours;
                if (hoursLeft < 24 && hoursLeft >= 0 && task.StatusId != 3)
                {
                    <div class="col-md-4">
                        <div class="card border-primary mb-3" style="background-color: #f8d7da; width: 18rem;" data-statusid="@task.StatusId" data-categoryid="@task.CategoryId">
                            <div class="card-header text-white">
                                <h5 class="card-title">@task.Name</h5>
                            </div>
                            <div class="card-body">

                                <h6 class="card-subtitle mb-2 text-muted">Due date: @task.DueDate.ToString("dd/MM/yyyy")</h6>
                                @{
                                    if (Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId) == null)
                                    {
                                        <p class="card-text">Status: Undefined</p>
                                    }
                                    else
                                    {
                                        <p class="card-text">Status: @Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId).Name</p>
                                    }
                                }

                                @{
                                    if (Model.Categories.FirstOrDefault(c => c.CategoryId == task.CategoryId) == null)
                                    {
                                        <p class="card-text">Category: Undefined</p>
                                    }
                                    else
                                    {
                                        <p class="card-text">Category: @Model.Categories.FirstOrDefault(c => c.CategoryId == task.CategoryId).Name</p>
                                    }
                                }
                                @if (@Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId)?.Name == "Finished")
                                {
                                    @* <p class="card-text">Finished</p>*@
                                    <span id="progress-value">Progress: 100%</span>
                                }
                                else if (@Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId)?.Name == "Unstarted")
                                {
                                    @*<p class="card-text">Unstarted</p>*@
                                    <span id="progress-value">Progress: 0%</span>
                                }
                                else
                                {
                                   // <p class="card-text">(@Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId)?.Name</p>
                                    <span id="progress-value">Progress: @task.Progress%</span>
                                }
                                <p class="card-text">Description: @task.Description</p>
                                <div class="w-75 btn-group" role="group">
                                    <a id="editBtn" asp-page="./Tasks/EditTask" asp-route-id="@task.Id">
                                        <i class="bi bi-pencil-square"></i>
                                        Edit
                                    </a>
                                    <style>
                                        #editBtn {
                                            color: black;
                                            text-decoration: none;
                                        }

                                            #editBtn:hover {
                                                color: red;
                                            }
                                    </style>
                                </div>



                                <div class="w-75 btn-group" role="group">
                                    <a id="deleteButton" asp-page="/Index" asp-route-id="@task.Id" asp-page-handler="Delete" onclick="return confirm('Are you sure that you want to delete this task?')">
                                        <i class="bi bi-trash"></i>
                                        Delete
                                    </a>

                                    <style>
                                        #deleteButton {
                                            color: black;
                                            text-decoration: none;
                                        }

                                            #deleteButton:hover {
                                                color: red
                                            }
                                    </style>

                                </div>

                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="col-md-4">
                        <div class="card border-primary mb-3" style="width: 18rem;" data-categoryid="@task.CategoryId" data-statusid="@task.StatusId">
                            <div class="card-header text-white">
                                <h5 class="card-title">@task.Name</h5>
                            </div>
                            <div class="card-body">

                                <h6 class="card-subtitle mb-2 text-muted">Due date: @task.DueDate.ToString("dd/MM/yyyy")</h6>
                                @{
                                    if (Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId) == null)
                                    {
                                        <p class="card-text">Status: Undefined</p>
                                    }
                                    else
                                    {
                                        <p class="card-text">Status: @Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId).Name</p>
                                    }
                                }

                                @{
                                    if (Model.Categories.FirstOrDefault(c => c.CategoryId == task.CategoryId) == null)
                                    {
                                        <p class="card-text">Category: Undefined</p>
                                    }
                                    else
                                    {
                                        <p class="card-text">Category: @Model.Categories.FirstOrDefault(c => c.CategoryId == task.CategoryId).Name</p>
                                    }
                                }
                                @if (@Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId)?.Name == "Finished")
                                {
                                    @*  <p class="card-text">Finished</p>*@
                                    <span id="progress-value">Progress: 100%</span>
                                }
                                else if (@Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId)?.Name == "Unstarted")
                                {
                                    @*  <p class="card-text">Unstarted</p>*@
                                    <span id="progress-value">Progress: 0%</span>
                                }
                                else
                                {
                                    //@*<p class="card-text">@Model.Statuses.FirstOrDefault(c => c.StatusId == task.StatusId)?.Name</p>*@
                                    <span id="progress-value">Progress: @task.Progress%</span>
                                }
                                <p class="card-text">Description: @task.Description</p>

                                <div class="w-75 btn-group" role="group">
                                    <a id="editBtn" asp-page="./Tasks/EditTask" asp-route-id="@task.Id">
                                        <i class="bi bi-pencil-square"></i>
                                        Edit
                                    </a>
                                    <style>
                                        #editBtn {
                                            color: black;
                                            text-decoration: none;
                                        }

                                            #editBtn:hover {
                                                color: red;
                                            }
                                    </style>
                                </div>



                                <div class="w-75 btn-group" role="group">
                                    <a id="deleteButton" asp-page="/Index" asp-route-id="@task.Id" asp-page-handler="Delete" onclick="return confirm('Are you sure that you want to delete this task?')">
                                        <i class="bi bi-trash"></i>
                                        Delete
                                    </a>

                                    <style>
                                        #deleteButton {
                                            color: black;
                                            text-decoration: none;
                                        }

                                        #deleteButton:hover {
                                                color: red;
                                        }
                                    </style>

                                </div>

                            </div>
                        </div>
                    </div>
                }
            }
        }
    </div>

</div>


<script>

    $(document).ready(function () {
        //Category filter checkboxes
        $('input[name="categoryFilter"]').change(function () {
            //map every checked category into an array of integers
            var selectedCategories = $('input[name="categoryFilter"]:checked').map(function () {
                return parseInt($(this).val());
            }).get();
            //no category selected|| the "All" button is selected
            if (selectedCategories.length == 0 || selectedCategories.includes(0)) {
                //show the whole list
                $('[data-categoryid]').show();
            }
            else {

                $('[data-categoryid]').each(function () {
                    //show the selected categories
                    if (selectedCategories.includes($(this).data('categoryid'))) {
                        $(this).show();
                    }
                    //hide the unselected categories
                    else {
                        $(this).hide();
                    }
                });
            }
        });
    });


    $(document).ready(function () {
        //Category filter checkboxes
        $('input[name="statusFilter"]').change(function () {
            //map every checked category into an array of integers
            var selectedCategories = $('input[name="statusFilter"]:checked').map(function () {
                return parseInt($(this).val());
            }).get();
            //no category selected|| the "All" button is selected
            if (selectedCategories.length == 0 || selectedCategories.includes(0)) {
                //show the whole list
                $('[data-statusid]').show();
            }
            else {

                $('[data-statusid]').each(function () {
                    //show the selected categories
                    if (selectedCategories.includes($(this).data('statusid'))) {
                        $(this).show();
                    }
                    //hide the unselected categories
                    else {
                        $(this).hide();
                    }
                });
            }
        });
    });




</script>